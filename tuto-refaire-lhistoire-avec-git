<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <title>Refaire l'histoire avec git &bull; Le blog d'Eskimon</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <link rel="stylesheet" href="/static/css/hljs-monokai.css" />
    <link rel="stylesheet" href="/static/css/style.css" />
    <!-- Google font -->
    <link href="https://fonts.googleapis.com/css?family=Roboto" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet">

    <!-- Favicon -->
    <link rel="icon" type="image/x-icon" href="/static/images/favicon/favicon.ico">
    <link rel="apple-touch-icon" sizes="57x57" href="/static/images/favicon/apple-icon-57x57.png">
    <link rel="apple-touch-icon" sizes="60x60" href="/static/images/favicon/apple-icon-60x60.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/static/images/favicon/apple-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="76x76" href="/static/images/favicon/apple-icon-76x76.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/static/images/favicon/apple-icon-114x114.png">
    <link rel="apple-touch-icon" sizes="120x120" href="/static/images/favicon/apple-icon-120x120.png">
    <link rel="apple-touch-icon" sizes="144x144" href="/static/images/favicon/apple-icon-144x144.png">
    <link rel="apple-touch-icon" sizes="152x152" href="/static/images/favicon/apple-icon-152x152.png">
    <link rel="apple-touch-icon" sizes="180x180" href="/static/images/favicon/apple-icon-180x180.png">
    <link rel="icon" type="image/png" sizes="192x192"  href="/static/images/favicon/android-icon-192x192.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/static/images/favicon/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="96x96" href="/static/images/favicon/favicon-96x96.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/static/images/favicon/favicon-16x16.png">
    <link rel="manifest" href="/static/images/favicon/manifest.json">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="msapplication-TileImage" content="/static/images/favicon/ms-icon-144x144.png">


    <meta name="description" content="Utilisation avancée de git et sa commande rebase." />

    <meta name="tags" content="git" />
    <meta name="tags" content="tuto" />

  <meta property="og:site_name" content="Le blog d'Eskimon">
  <meta property="og:title" content="Refaire l'histoire avec git">
  <meta property="og:url" content="https://eskimon.fr/tuto-refaire-lhistoire-avec-git/">
  <meta property="og:language" content="fr_FR">
  <meta property="og:type" content="website">

  <meta property="twitter:domain" content="https://eskimon.fr/">
  <meta property="twitter:card" content="summary">
  <meta property="twitter:url" content="https://eskimon.fr/tuto-refaire-lhistoire-avec-git/">
  <meta property="twitter:title" content="Refaire l'histoire avec git">
<meta property="twitter:description" content="Utilisation avancée de git et sa commande rebase.">  <meta property="twitter:site" content="SITENAME">
  <meta property="twitter:creator" content="@eskimon_fr">

  <link rel="schema.DC" href="http://purl.org/dc/elements/1.1/" />
  <meta name="DC.publisher" lang="fr" content="Le blog d'Eskimon" />
  <meta name="DC.creator" content="Eskimon" />
  <meta name="DC.type" content="text" />
  <meta name="DC.title" content="Refaire l'histoire avec git" />
  <meta name="DC.abstract" content="Refaire l'histoire avec git – Utilisation avancée de git et sa commande rebase." />
  <meta name="DC.subject" lang="fr" content=" – git; tuto" />
<meta name="DC.description" lang="fr" content="Utilisation avancée de git et sa commande rebase." />  <meta name="DC.date" content="2016-11-12T13:05:00+01:00" />
  <meta name="DC.format" content="text/html" />
  <meta name="DC.language" content="fr" />
  <meta name="DC.rights" content="CC BY-NC-SA" />


  <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({
      google_ad_client: "ca-pub-2080155902357792",
      enable_page_level_ads: true
    });
    </script>
</head>

<body>
<nav class="navbar navbar-expand-lg navbar-light bg-secondary-l40 py-0">
    <a class="navbar-brand" href="/">
        <img src="/static/images/logo.png" width="20" height="20" alt="">
        Le blog d'Eskimon
    </a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
        <div class="navbar-nav ml-auto">
                <a class="nav-item nav-link " href="/category/arduino/">Arduino</a>
                <a class="nav-item nav-link " href="/category/articles/">Articles</a>
                <a class="nav-item nav-link active" href="/category/tuto/">Tuto</a>
            <!--<a class="nav-item nav-link active" href="#">Home <span class="sr-only">(current)</span></a>-->
        </div>
    </div>
</nav>
<!--
    <div class="vh-100 m-0 p-0 ">
        <div class="wmax-1024 mx-auto my-0 py-0 text-justify">
            <div class="text-center">
                <a href="https://eskimon.fr" class="text-dark no-decoration" >
                    <h1 class="logo-font text-center my-5 display-2 d-md-block d-none">Le blog d'Eskimon</h1>
                    <h2 class="logo-font text-center d-md-none my-5">Le blog d'Eskimon</h2>
                </a>
            </div>
        </div>
    </div>
-->
    <div class="container-fluid es-verticalfill">
<div class="row">
    <!-- Sidebar -->
    <div class="col-md-2 col-lg-2 d-none d-md-block sticky-top es-scrollable pt-3 px-1 bg-light es-ul-bordered" id="es-side-summary">
        <nav class="px-2" id="es-side-summary-content">
            <!-- Summary will come here -->
        </nav>
        <!-- Add here self-promo for ebook -->
        <!-- Add here adsense block -->
        <hr>
        <div id="es-side-summary-bot-annonce">
            <!-- Responsive sidebar -->
            <ins class="adsbygoogle"
            style="display:block"
            data-ad-client="ca-pub-2080155902357792"
            data-ad-slot="3497585408"
            data-ad-format="auto"></ins>
            <script>
            (adsbygoogle = window.adsbygoogle || []).push({});
            </script>
        </div>
    </div>
    <!-- Main content -->
    <div class="col-md-9 col-lg-7 offset-lg-1 d-block pt-3">
        <article>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb bg-white">
                    <li class="breadcrumb-item"><a href="/category/tuto/">Tuto</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Refaire l'histoire avec git</li>
                </ol>
            </nav>
            <header class="es-post-info">
                <h1 class="text-center my-4">Refaire l'histoire avec git</h1>
            </header>
            <footer class="es-post-info pb-2 mb-2">
                <div class="row align-items-center">
                    <div class="col-auto mr-auto">
                        <span class="vcard author">
                            <a class="" href="/author/eskimon/" rel="author">Eskimon</a>
                        </span>
                        ,
                        <time class="" datetime="2016-11-12T13:05:00+01:00" pubdate>
                            le sam. 12 novembre 2016
                        </time>
                    </div>
                    <div class="col-auto">
                        <a class="btn btn-outline-primary btn-sm" href="/tag/git/" rel="tag">git</a>
                        <a class="btn btn-outline-primary btn-sm" href="/tag/tuto/" rel="tag">tuto</a>
                    </div>
                </div>
            </footer>

            <!-- /.post-info -->
            <div class="entry-content">
                <p>
 Lors d’un projet informatique, gérer ses sources et leur historique est crucial. C’est pourquoi des logiciels comme
 <strong>
  git
 </strong>
 ont vu le jour, afin de suivre les versions et modifications.
</p>
<p>
 Dans le meilleur des mondes, chaque commit est bien exécuté et les choses sont faites dans l’ordre. Les fichiers ne sont pas édités sans arrêt, et donc tous les changements sont bien atomiques. Ça, c’est la théorie…
</p>
<p>
 Dans la pratique, il peut arriver que l’on ait besoin de toucher à l’historique git pour plusieurs raisons, comme fusionner des commits entre eux (pour n’en avoir plus qu’un) ou encore fusionner une branche avec une autre, pour suivre les changements de l’une dans l’autre. Eh bien tout cela peut se résumer en une commande :
 <strong>
  rebase
 </strong>
 .
</p>
<p>
 Ce tutoriel
 <strong>
  introductif
 </strong>
 va vous proposer de
 <strong>
  découvrir
 </strong>
 et mettre en pratique ces différents aspects au travers d’un exemple simple et complet. À la fin de ce tutoriel, vous saurez :
</p>
<ul>
 <li>
  déplacer des commits pour réécrire un historique ;
 </li>
 <li>
  fusionner deux commits entre eux ;
 </li>
 <li>
  fusionner une branche dans une autre proprement.
 </li>
</ul>
<div class="custom-block alert alert-primary">
 <div class="custom-block-body">
  <p>
   Pour suivre ce tutoriel, quelques pré-requis sont nécessaires :
  </p>
  <ul>
   <li>
    savoir se servir de git et ses opérations de base (commit, add, branch) ;
   </li>
   <li>
    comprendre les concepts de branche et d’historique.
   </li>
  </ul>
 </div>
</div>
<div class="custom-block alert alert-warning">
 <div class="custom-block-body">
  <p>
   Dans ce tutoriel nous allons toucher l’historique d’un dépôt git. Bien que cela soit souvent sans risque pour votre dépôt, les opérations que nous allons faire peuvent tout autant très bien casser votre historique de modifications, si vous n’êtes pas assez vigilant.
   <br/>
   Faites donc attention lorsque vous les appliquez sur vos projets. Évitez aussi tant que possible de faire ce genre d’opérations une fois vos changements poussés sur le serveur commun, pour ne pas embrouiller le travail de vos collègues.
  </p>
 </div>
</div>
<div class="custom-block custom-block-spoiler">
 <div class="custom-block-body">
  <p>
   Si vous faites partie des développeurs de Zeste de Savoir, sachez que les notes dans les balises "secret" vous sont destinées, pour faire des analogies avec le projet.
  </p>
 </div>
</div>
<h3 id="sommaire">
 <a aria-hidden="true" href="#sommaire">
  <span class="es-autolink-heading">
  </span>
 </a>
 Sommaire
</h3>
<ul>
 <li>
  <p>
   <a href="#préparation-de-notre-environnement">
    Préparation de notre environnement
   </a>
  </p>
  <ul>
   <li>
    <a href="#la-situation">
     La situation
    </a>
   </li>
   <li>
    <a href="#le-dépôt-exemple">
     Le dépôt exemple
    </a>
   </li>
   <li>
    <a href="#les-objectifs">
     Les objectifs
    </a>
   </li>
  </ul>
 </li>
 <li>
  <a href="#déplacer-des-commits">
   Déplacer des commits
  </a>
 </li>
 <li>
  <a href="#fusionner-des-commits">
   Fusionner des commits
  </a>
 </li>
 <li>
  <p>
   <a href="#merger-une-autre-branche">
    Merger une autre branche
   </a>
  </p>
  <ul>
   <li>
    <ul>
     <li>
      <a href="#sources">
       Sources
      </a>
     </li>
    </ul>
   </li>
  </ul>
 </li>
</ul>
<h3 id="préparation-de-notre-environnement">
 <a aria-hidden="true" href="#préparation-de-notre-environnement">
  <span class="es-autolink-heading">
  </span>
 </a>
 Préparation de notre environnement
</h3>
<h4 id="la-situation">
 <a aria-hidden="true" href="#la-situation">
  <span class="es-autolink-heading">
  </span>
 </a>
 La situation
</h4>
<p>
 Cette année Bob s’organise, il se fait des fiches de révision pour son examen d’histoire. Du coup, en bon programmeur, il décide de les rédiger en markdown pour pouvoir les enrichir avec des illustrations et autres bricoles.
</p>
<p>
 Il a ainsi rédigé 5 fichiers différents pour 5 périodes différentes :
</p>
<ul>
 <li>
  la révolution industrielle (la
  <em>
   revolution
  </em>
  industrielle.md) ;
 </li>
 <li>
  la Première Guerre mondiale (la
  <em>
   premiere
  </em>
  guerre_mondiale.md) ;
 </li>
 <li>
  l’entre-deux-guerres (entre_guerre.md) ;
 </li>
 <li>
  la Seconde Guerre mondiale (la
  <em>
   seconde
  </em>
  guerre_mondiale.md) ;
 </li>
 <li>
  les Trente Glorieuses (30_glorieuses.md).
 </li>
</ul>
<p>
 Seulement il y a un problème, Bob a été malade pendant l’année. Du coup, ses fichiers ont été écrits dans le désordre : il a rédigé ses cours au fur et à mesure puis, quand il avait du temps, il a fait du rattrapage en prenant les cours d’Alice.
</p>
<p>
 Il se retrouve alors avec l’historique de commits git suivant :
</p>
<div class="hljs-code-div">
 <div class="hljs-line-numbers">
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
 </div>
 <pre><code class="hljs language-maxima">218bfcb Conclusion de la première guerre mondiale - rattrapage
b1cc9fd L'entre deux guerres
70c08d1 Début de la seconde guerre mondiale - rattrapage
ce99651 Les <span class="hljs-number">30</span> glorieuses
61f6523 La seconde guerre mondiale - fin
b52fa42 La première guerre mondiale
8c310df La révolution industrielle
47901da Ajout des titres des parties
<span class="hljs-number">5b56868</span> Creation des fichiers du programme d'histoire
</code></pre>
</div>
<p>
 C’est cet historique que nous allons essayer de réordonner. On peut voir que les premiers commits correspondent au début du programme scolaire, puis ensuite Bob a été malade. Il a alors fait une pause, puis repris le cours dans l’ordre. Ensuite, il a rattrapé les cours manquants en recopiant les notes d’un autre élève, en partant du plus récent dans le programme au plus vieux.
</p>
<div class="custom-block alert alert-warning">
 <div class="custom-block-body">
  <p>
   L’historique montrée est antéchronologique, le commit le plus récent (celui que l’on vient de faire) est en haut de la liste, le plus vieux est en bas.
  </p>
 </div>
</div>
<h4 id="le-dépôt-exemple">
 <a aria-hidden="true" href="#le-dépôt-exemple">
  <span class="es-autolink-heading">
  </span>
 </a>
 Le dépôt exemple
</h4>
<p>
 Afin que vous puissiez faire des tests chez vous, je vous mets à disposition un dépôt git possédant cette situation initiale. Vous pouvez le récupérer dans
 <a href="https://dl.dropboxusercontent.com/u/18967337/temp/tuto_git_rebase.zip">
  cette archive
 </a>
 .
</p>
<p>
 Dans ce dépôt, vous devez trouver deux branches qui ont pour noms Bob et Alice. La branche Bob possède les écrits de Bob, tandis que celle d’Alice possède quelques anecdotes qu’elle a voulu lui donner plus tard. Pour l’instant, concentrez-vous sur la branche de Bob.
</p>
<div class="hljs-code-div">
 <div class="hljs-line-numbers">
  <span>
  </span>
 </div>
 <pre><code class="hljs language-armasm"><span class="hljs-symbol">git</span> checkout <span class="hljs-keyword">Bob
</span></code></pre>
</div>
<p>
 Vous pouvez alors vérifier les commits et leur mauvais rangement. Vous devriez obtenir la liste que l’on a vue plus tôt.
</p>
<div class="hljs-code-div">
 <div class="hljs-line-numbers">
  <span>
  </span>
 </div>
 <pre><code class="hljs language-applescript">git <span class="hljs-built_in">log</span> <span class="hljs-comment">--pretty=oneline --abbrev-commit</span>
</code></pre>
</div>
<div class="custom-block alert alert-primary">
 <div class="custom-block-body">
  <p>
   J’utiliserai la commande ci-dessus via un alias
   <code>
    git logo
   </code>
   (pour "log oneline"). Vous pouvez le rajouter en éditant votre fichier
   <code>
    .gitconfig
   </code>
   ou via la commande
   <code>
    git config --global alias.logo 'log --pretty=oneline --abbrev-commit'
   </code>
   .
  </p>
 </div>
</div>
<div class="custom-block custom-block-spoiler">
 <div class="custom-block-body">
  <p>
   Ici, la branche Bob peut-être assimilée à votre branche de bugfix ou de développement de
   <em>
    feature
   </em>
   . La branche d’Alice sera ensuite vue comme upstream/dev, mais nous y reviendrons.
  </p>
 </div>
</div>
<div class="custom-block alert alert-primary">
 <div class="custom-block-body">
  <p>
   Si git vous ennuie à cause des droits sur les fichiers (compatibilité entre Windows, Linux, etc.) alors entrez la commande suivante, qui vous permettra de désactiver la surveillance du changement des droits :
   <code>
    git config core.filemode false
   </code>
  </p>
 </div>
</div>
<h4 id="les-objectifs">
 <a aria-hidden="true" href="#les-objectifs">
  <span class="es-autolink-heading">
  </span>
 </a>
 Les objectifs
</h4>
<p>
 Nos objectifs seront donc multiples. Afin de conserver un dépôt propre, nous allons effectuer une à une les opérations suivantes :
</p>
<ul>
 <li>
  mise dans l’ordre chronologique du cours des différents fichiers (car je suis maniaque) ;
 </li>
 <li>
  fusion des commits consécutifs traitant du même fichier et de la même partie "logique" ;
 </li>
 <li>
  fusion de la branche d’Alice pour "enrichir" notre branche de son contenu.
 </li>
</ul>
<p>
 À la fin, vous serez passés maîtres de la commande
 <code>
  rebase
 </code>
 et de ses différents cas d’utilisations.
 <img alt=";)" class="smiley" src="./static/smileys/clin.png"/>
</p>
<h3 id="déplacer-des-commits">
 <a aria-hidden="true" href="#déplacer-des-commits">
  <span class="es-autolink-heading">
  </span>
 </a>
 Déplacer des commits
</h3>
<p>
 À l’heure actuelle, on a un historique un peu farfelu. Dans l’idéal, on aimerait que les éléments se suivent chronologiquement, voire que l’on ait uniquement un seul commit par période.
</p>
<p>
 Ainsi, on va essayer d’obtenir le résultat suivant :
</p>
<div class="hljs-code-div">
 <div class="hljs-line-numbers">
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
 </div>
 <pre><code class="hljs language-maxima">----------- AVANT -----------
218bfcb Conclusion de la première guerre mondiale - rattrapage
b1cc9fd L'entre deux guerres
70c08d1 Début de la seconde guerre mondiale - rattrapage
ce99651 Les <span class="hljs-number">30</span> glorieuses
61f6523 La seconde guerre mondiale - fin
b52fa42 La première guerre mondiale
8c310df La révolution industrielle
47901da Ajout des titres des parties
<span class="hljs-number">5b56868</span> Creation des fichiers du programme d'histoire

----------- APRES -----------
ce99651 Les <span class="hljs-number">30</span> glorieuses
61f6523 La seconde guerre mondiale - fin
70c08d1 Début de la seconde guerre mondiale - rattrapage
b1cc9fd L'entre deux guerres
218bfcb Conclusion de la première guerre mondiale - rattrapage
b52fa42 La première guerre mondiale
8c310df La révolution industrielle
47901da Ajout des titres des parties
<span class="hljs-number">5b56868</span> Creation des fichiers du programme d'histoire
</code></pre>
</div>
<p>
 Comme vous pouvez le constater, de nombreux commits ont littéralement changé de place ! C’est ça que nous allons faire ici, déplacer des commits !
</p>
<p>
 Et aussi impressionnant que cela puisse paraître, il va suffire d’utiliser une seule commande à bon escient pour le faire :
 <code>
  git rebase
 </code>
 . Mais attention, on ne l’utilise pas n’importe comment.
</p>
<p>
 Pour l’utiliser, on va devoir lui spécifier le commit
 <strong>
  le plus ancien
 </strong>
 devant rester tel quel. Dans notre cas, nous souhaitons tout remettre en ordre jusqu’à "La premiere guerre mondiale" (b52fa42) qui, lui, ne bouge pas. On va alors lancer le rebase
 <strong>
  en mode interactif
 </strong>
 jusqu’à ce commit :
</p>
<div class="hljs-code-div">
 <div class="hljs-line-numbers">
  <span>
  </span>
 </div>
 <pre><code class="hljs language-stylus">git rebase -<span class="hljs-selector-tag">i</span> b52fa42^
</code></pre>
</div>
<div class="custom-block alert alert-warning">
 <div class="custom-block-body">
  <p>
   Attention à ne pas oublier l’option
   <code>
    -i
   </code>
   pour le mode
   <strong>
    interactif
   </strong>
   ainsi que le
   <code>
    ^
   </code>
   après l’identifiant du commit ! Ce dernier sert à indiquer que l’on veut remonter jusqu’à ce commit
   <em>
    inclus
   </em>
   .
  </p>
 </div>
</div>
<p>
 Une nouvelle fenêtre s’ouvre alors avec plein de choses passionnantes :
</p>
<div class="hljs-code-div">
 <div class="hljs-line-numbers">
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
 </div>
 <pre><code class="hljs language-shell">pick b52fa42 La première guerre mondiale
pick 61f6523 La seconde guerre mondiale - fin
pick ce99651 Les 30 glorieuses
pick 70c08d1 Début de la seconde guerre mondiale - rattrapage
pick b1cc9fd L'entre deux guerres
pick 218bfcb Conclusion de la première guerre mondiale - rattrapage
<span class="hljs-meta">
#</span><span class="bash"><span class="hljs-comment"># Rebase 8c310df..218bfcb onto 8c310df</span></span>
<span class="hljs-meta">#</span><span class="bash"></span>
<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># Commands:</span></span>
<span class="hljs-meta">#</span><span class="bash">  p, pick = use commit</span>
<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">#  r, reword = use commit, but edit the commit message</span></span>
<span class="hljs-meta">#</span><span class="bash">  e, edit = use commit, but stop <span class="hljs-keyword">for</span> amending</span>
<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">#  s, squash = use commit, but meld into previous commit</span></span>
<span class="hljs-meta">#</span><span class="bash">  f, fixup = like <span class="hljs-string">"squash"</span>, but discard this commit<span class="hljs-string">'s log message</span></span>
<span class="hljs-meta">#</span><span class="bash">#  x, exec = run command (the rest of the line) using shell</span>
<span class="hljs-meta">#</span><span class="bash"></span>
<span class="hljs-meta">#</span><span class="bash"># If you remove a line here THAT COMMIT WILL BE LOST.</span>
<span class="hljs-meta">#</span><span class="bash"> However, if you remove everything, the rebase will be aborted.</span>
</code></pre>
</div>
<p>
 Si vous comprenez l’anglais, vous avez peut-être déjà deviné comment faire. Sinon, voici la procédure.
</p>
<p>
 Dans cette affichage, vous avez la liste des commits jusqu’au dernier que vous souhaitez garder tel quel. L’opération est maintenant simple, il va falloir déplacer les lignes pour les mettre dans l’ordre que vous voulez. L’ordre en question sera celui que l’on a vu juste au-dessus. Laissez les "pick" en début de ligne, ils sont là pour signifier que vous souhaitez utiliser le commit en question.
</p>
<p>
 Vous avez réussi ? Très bien, vous devriez obtenir quelque chose comme ça avant de valider :
</p>
<div class="hljs-code-div">
 <div class="hljs-line-numbers">
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
 </div>
 <pre><code class="hljs language-stata">pick b52fa42 <span class="hljs-keyword">La</span> première guerre mondiale
pick 218bfcb Conclusion <span class="hljs-keyword">de</span> <span class="hljs-keyword">la</span> première guerre mondiale - rattrapage
pick b1cc9fd <span class="hljs-keyword">L</span>'entre deux guerres
pick 70c08d1 <span class="hljs-keyword">D</span>ébut <span class="hljs-keyword">de</span> <span class="hljs-keyword">la</span> seconde guerre mondiale - rattrapage
pick 61f6523 <span class="hljs-keyword">La</span> seconde guerre mondiale - fin
pick ce99651 Les 30 glorieuses

## Et <span class="hljs-keyword">en</span> dessous le blabla <span class="hljs-keyword">pr</span>écédent
</code></pre>
</div>
<p>
 Sauvegardez puis quittez l’éditeur. Le rebase se lance alors automatiquement… et vous crie dessus, c’est un échec !
 <img alt=":(" class="smiley" src="./static/smileys/triste.png"/>
</p>
<div class="custom-block alert alert-info">
 <div class="custom-block-body">
  <p>
   Que s’est-il passé ?
  </p>
 </div>
</div>
<p>
 Si vous utilisez la commande
 <code>
  git status
 </code>
 vous allez voir qu’il existe un conflit sur le fichier "la
 <em>
  seconde
 </em>
 guerre_mondiale.md". En l’ouvrant, vous verrez des marqueurs
 <code>
  &lt;&lt;&lt;&lt;&lt;&lt;
 </code>
 ,
 <code>
  ======
 </code>
 et
 <code>
  &gt;&gt;&gt;&gt;&gt;
 </code>
 que git a rajoutés pour vous signaler les endroits où il n’arrive pas à faire une chose logique.
</p>
<p>
 C’est donc à vous de jouer en éditant manuellement le fichier, pour qu’il ait l’allure escomptée. En l’occurrence, c’est simplement une ligne blanche qui l’ennuie. Supprimez-là, ainsi que les marqueurs, puis sauvegarder le fichier.
</p>
<p>
 Nous allons maintenant signaler à git que le conflit est résolu en faisant un :
</p>
<div class="hljs-code-div">
 <div class="hljs-line-numbers">
  <span>
  </span>
 </div>
 <pre><code class="hljs language-dockerfile">git <span class="hljs-keyword">add</span><span class="bash"> la_seconde_guerre_mondiale.md
</span></code></pre>
</div>
<p>
 Cela nous permet de rajouter le fichier dans l’index, puis on lui demande de continuer le rebase avec :
</p>
<div class="hljs-code-div">
 <div class="hljs-line-numbers">
  <span>
  </span>
 </div>
 <pre><code class="hljs language-kotlin">git rebase --<span class="hljs-keyword">continue</span>
</code></pre>
</div>
<p>
 Git vous demandera alors de confirmer le message de commit (ce que vous ferez), puis continuera son bonhomme de chemin.
</p>
<p>
 Un autre conflit similaire apparait alors, résolvez-le de la même manière.
</p>
<p>
 À la fin, git doit afficher le message
 <code>
  Successfully rebased and updated refs/heads/Bob.
 </code>
 pour nous informer que tout va bien.
</p>
<p>
 Si vous réaffichez votre historique, vos commits sont maintenant dans l’ordre ! Félicitations, voilà une bonne chose de faite !
</p>
<h3 id="fusionner-des-commits">
 <a aria-hidden="true" href="#fusionner-des-commits">
  <span class="es-autolink-heading">
  </span>
 </a>
 Fusionner des commits
</h3>
<div class="custom-block custom-block-spoiler">
 <div class="custom-block-body">
  <p>
   Cette opération est souvent pratique quand vous écrivez la doc en plusieurs fois, et que vous voulez réunir tout les commits concernant cette dernière en un seul.
  </p>
 </div>
</div>
<p>
 Cette fois-ci nous allons
 <strong>
  fusionner
 </strong>
 des commits pour réduire ces derniers, et surtout les rendre cohérents ! (Parce qu’avoir un commit pour une faute d’orthographe, c’est désagréable !)
</p>
<p>
 On va donc chercher à atteindre le schéma suivant :
</p>
<div class="hljs-code-div">
 <div class="hljs-line-numbers">
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
 </div>
 <pre><code class="hljs language-maxima">-------- AVANT --------
56701fc Les <span class="hljs-number">30</span> glorieuses
a63009c Début de la seconde guerre mondiale - rattrapage
752c8cd L'entre deux guerres
328d49e Conclusion de la première guerre mondiale - rattrapage
b52fa42 La première guerre mondiale
8c310df La révolution industrielle
47901da Ajout des titres des parties
<span class="hljs-number">5b56868</span> Creation des fichiers du programme d'histoire

-------- APRES --------
d55d7d3 Les <span class="hljs-number">30</span> glorieuses
<span class="hljs-number">3107653</span> La seconde guerre mondiale
ca137f6 L'entre deux guerres
ebfa63b La première guerre mondiale
8c310df La révolution industrielle
47901da Ajout des titres des parties
<span class="hljs-number">5b56868</span> Creation des fichiers du programme d'histoire
</code></pre>
</div>
<p>
 Oui, nous allons aussi en profiter pour mettre à jour un message de commit !
</p>
<p>
 Là encore, c’est la magie de la commande
 <code>
  rebase
 </code>
 qui va nous être utile. Comme précédemment, on va la lancer sur le dernier commit qui ne bouge pas, donc
 <code>
  b52fa42 La première guerre mondiale
 </code>
 . Ce qui nous donne :
</p>
<div class="hljs-code-div">
 <div class="hljs-line-numbers">
  <span>
  </span>
 </div>
 <pre><code class="hljs language-stylus">git rebase -<span class="hljs-selector-tag">i</span> b52fa42^
</code></pre>
</div>
<p>
 La machine se met en route et nous affiche le menu permettant de faire les modifications. Nous allons cette fois-ci lui dire de fusionner le commit 8f3d90c avec son prédécesseur et nous en profiterons pour éditer le message de commit de e4b80f96. On utilisera pour cela le mot-clé "fixup" ou "squash" pour fusionner (le dernier permet de changer le message de commit lors de la fusion), et nous utiliserons "reword" pour éditer juste le message du second commit à modifier.
</p>
<p>
 Voici la séquence :
</p>
<div class="hljs-code-div">
 <div class="hljs-line-numbers">
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
  <span>
  </span>
 </div>
 <pre><code class='hljs language-hl_lines="2'>pick b52fa42 La première guerre mondiale
fixup 328d49e Conclusion de la première guerre mondiale - rattrapage
pick 752c8cd L'entre deux guerres
reword a63009c Début de la seconde guerre mondiale - rattrapage
pick 56701fc Les 30 glorieuses
</code></pre>
</div>
<p>
 Sauvegardez, quittez, puis laissez la magie opérer ! Lors du processus, l’éditeur devrait apparaître pour vous demander le nouveau commit pour l’opération de "reword".
</p>
<p>
 Et voilà, c’est déjà fini pour ce morceau ! Plutôt simple, non ?
</p>
<h3 id="merger-une-autre-branche">
 <a aria-hidden="true" href="#merger-une-autre-branche">
  <span class="es-autolink-heading">
  </span>
 </a>
 Merger une autre branche
</h3>
<div class="custom-block custom-block-spoiler">
 <div class="custom-block-body">
  <p>
   Ce dernier cas est le cas habituel du merge de upstream/dev dans votre branche de travail, afin que git puisse merger votre PR. Ici, essayez d’imaginer la branche d’Alice en tant que upstream/dev.
  </p>
 </div>
</div>
<p>
 Une dernière fonction bien pratique de l’outil rebase est le
 <em>
  merge
 </em>
 (fusion) entre des branches. Ainsi, si vous travaillez sur une branche pour développer quelque chose, mais que vous voulez récupérer le contenu d’une autre branche pour mettre à jour la vôtre (vous synchroniser avec
 <em>
  master
 </em>
 par exemple),
 <code>
  rebase
 </code>
 peut vous y aider.
</p>
<p>
 Cette fois-ci, on va se servir de rebase non pas en indiquant un commit mais en indiquant la branche que l’on aimerait récupérer dans notre travail. En l’occurrence, on va chercher à récupérer les modifications d’Alice (branche du même nom) qui a pris notre cours puis y a rajouté quelques anecdotes dans son coin.
</p>
<p>
 Voici la petite commande à lancer :
</p>
<div class="hljs-code-div">
 <div class="hljs-line-numbers">
  <span>
  </span>
 </div>
 <pre><code class="hljs language-ebnf"><span class="hljs-attribute">git rebase Alice</span>
</code></pre>
</div>
<div class="custom-block alert alert-warning">
 <div class="custom-block-body">
  <p>
   Cette fois-ci, pas besoin du mode "interactif"
   <code>
    -i
   </code>
   .
  </p>
 </div>
</div>
<p>
 Évidemment, il peut arriver que des conflits se présentent, sinon ce n’est pas drôle… Et évidemment, j’en ai volontairement créé pour cette opération !
 <img alt=":D" class="smiley" src="./static/smileys/heureux.png"/>
</p>
<p>
 Essayez de les corriger avec l’éditeur, puis il suffit de faire un
 <code>
  git add &lt;lefichier&gt;
 </code>
 suivi d’un
 <code>
  git rebase --continue
 </code>
 pour continuer le rebase !
</p>
<p>
 Vous voilà maintenant synchronisés avec la branche d’Alice.
 <img alt=":)" class="smiley" src="./static/smileys/smile.png"/>
</p>
<p>
 Une dernière petite information pour terminer. Si jamais un rebase devient trop compliqué à gérer, vous pouvez toujours l’abandonner pour revenir à l’état d’avant le lancement de la commande. Pour cela, tapez simplement
 <code>
  git rebase --abort
 </code>
 .
</p>
<h5 id="sources">
 <a aria-hidden="true" href="#sources">
  <span class="es-autolink-heading">
  </span>
 </a>
 Sources
</h5>
<ul>
 <li>
  le logo d’illustration de ce tutoriel appartient à git ;
 </li>
 <li>
  <a href="http://git-scm.com/book/fr/v1/Utilitaires-Git-Réécrire-l-historique">
   une lecture intéressante
  </a>
  .
 </li>
</ul>
            </div>
            <!-- /.entry-content -->
            <hr>
            <div class="mb-3 text-center">
                <a class="btn btn-outline-dark mx-1" href="https://twitter.com/share?url=https://eskimon.fr/tuto-refaire-lhistoire-avec-git/&amp;text=Refaire l'histoire avec git - https://eskimon.fr/tuto-refaire-lhistoire-avec-git/" rel="nofollow" title="Partager cet article sur Twitter" role="button" data-toggle="tooltip" data-placement="top">
                    <i class="fab fa-twitter fa-lg"></i>
                </a>
                <a class="btn btn-outline-dark mx-1" href="https://www.facebook.com/sharer.php?u=https://eskimon.fr/tuto-refaire-lhistoire-avec-git/&amp;t=Refaire l'histoire avec git - https://eskimon.fr/tuto-refaire-lhistoire-avec-git/" rel="nofollow" title="Partager cet article sur Facebook" role="button" data-toggle="tooltip" data-placement="top">
                    <i class="fab fa-facebook-f fa-lg"></i>
                </a>
                <a class="btn btn-outline-dark mx-1" href="https://plus.google.com/share?url=https://eskimon.fr/tuto-refaire-lhistoire-avec-git/&amp;hl=fr" rel="nofollow" title="Partager cet article sur Google +" role="button" data-toggle="tooltip" data-placement="top">
                    <i class="fab fa-google-plus fa-lg"></i>
                </a>
                <!--<a class="btn btn-outline-dark mx-1" href="http://sharetodiaspora.github.io/?url=https://eskimon.fr/tuto-refaire-lhistoire-avec-git/&amp;title=Refaire l'histoire avec git - https://eskimon.fr/tuto-refaire-lhistoire-avec-git/" rel="nofollow"  title="Partager cet article sur Diaspora" role="button" data-toggle="tooltip" data-placement="top">
                    <i class="fab fa-google-plus fa-lg"></i>
                </a>-->
                <a class="btn btn-outline-dark mx-1" href="mailto:?subject=Refaire l'histoire avec git&amp;body=https://eskimon.fr/tuto-refaire-lhistoire-avec-git/"rel="nofollow" title="Partager cet article par email" role="button" data-toggle="tooltip" data-placement="top">
                    <i class="far fa-envelope fa-lg"></i>
                </a>
            </div>
        </article>
    </div>
</div>
    </div>
<footer class="container-fluid bg-dark small text-white px-3">
<div class="row">
    <div class="col align-self-start">

    </div>
    <div class="col align-self-center text-center">
        © Eskimon -
        Blog propulsé par <a class="bold text-white" href="https://blog.getpelican.com/" rel="nofollow">Pelican</a> -
        Thème fait maison
    </div>
    <div class="col align-self-end text-right">
        <a class="btn btn-lg text-light" href="https://github.com/Eskimon" rel="nofollow" title="Mon profil Github">
            <i class="fab fa-github fa-lg"></i>
        </a>
        <a class="btn btn-lg text-light" href="https://twitter.com/Eskimon_fr" rel="nofollow" title="Me suivre sur Linkedin">
            <i class="fab fa-twitter fa-lg"></i>
        </a>
    </div>
  </div>
</footer>

    <!-- For formula -->
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
    <!-- Font awesome -->
    <script src="https://use.fontawesome.com/releases/v5.0.0/js/all.js"></script>
    <!-- JQuery first -->
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <!-- Popper.js -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <!-- Bootstrap -->
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
    <!-- For tooltips -->
    <script>$(function () {  $('[data-toggle="tooltip"]').tooltip()})</script>
    <script src="/static/js/my-scripts.js"></script>
<script>
function create_side_summary() {
    // Duplicate summary
    var main_summary = $('#sommaire').next();
    if(main_summary.length === 0)
        return
    var side_summary = main_summary.clone();
    side_summary.addClass('pl-0');
    var all_p = side_summary.find('p');
    all_p.contents().unwrap();
    var all_li = side_summary.find('li');
    all_li.addClass('pl-1');

    // scrollspy - in
    side_summary.attr('id', 'es-side-summary-mainlist');
    //side_summary.addClass('nav');
    //all_li.addClass('nav-item');
    var all_a = side_summary.find('a');
    all_a.addClass('nav-link');
    var all_ul = side_summary.find('ul');
    all_ul.addClass('pl-1');
    $('body').scrollspy({ target: '#es-side-summary-mainlist' });
    // scrollspy - out

    var summary_title = document.createElement("h4");
    summary_title.className = 'navbar-brand';
    summary_title.innerHTML = 'Sommaire';
    $(summary_title).prependTo('#es-side-summary-content');
    side_summary.appendTo('#es-side-summary-content');
    main_summary.addClass('es-subul-collapse');
}

function generate_spoilers() {
    all_secret = $('.custom-block-spoiler');
    all_secret.each(function( index ) {
    let content = $(this).html();
    $(this).html('');
    $(this).addClass('card');
    var headerText = document.createElement("button");
    var cardHeader = document.createElement("div");
    var cardBodyWrapper = document.createElement("div");
    var cardBody = document.createElement("div");
    $(headerText).text('Contenu masqué, cliquez pour afficher');
    $(headerText).addClass('btn btn-link btn-sm');
    $(headerText).attr('data-toggle', 'collapse');
    $(headerText).attr('data-target', '#collapse-' + index);
    $(headerText).attr('aria-controls', 'collapse-' + index);
    $(headerText).attr('aria-expanded', 'false');
    $(cardHeader).append(headerText);
    $(cardHeader).addClass('card-header');
    $(cardHeader).attr('id', 'spoiler-' + index);
    $(cardBody).html(content);
    $(cardBody).addClass('card-body');
    $(cardBodyWrapper).append(cardBody);
    $(cardBodyWrapper).addClass('collapse hide');
    $(cardBodyWrapper).attr('id', 'collapse-' + index)
    $(cardBodyWrapper).attr('aria-labelledby', 'spoiler-' + index)
    $(this).prepend(cardHeader);
    $(this).append(cardBodyWrapper);
    });

    $('.collapse').collapse({toggle: false});
}

create_side_summary();
generate_spoilers();
</script>
</body>

</html>
